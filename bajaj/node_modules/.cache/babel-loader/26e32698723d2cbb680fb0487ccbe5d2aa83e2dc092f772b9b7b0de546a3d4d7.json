{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sumresh N\\\\Bajaj\\\\bajaj\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form, Container, Row, Col, ListGroup } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MultiSelectDropdown from \"./MultiSelectDropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jsonInput, setJsonInput] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [showPreferences, setShowPreferences] = useState(false);\n  const handleSubmit = async () => {\n    try {\n      // Parse the JSON input\n      const parsedJson = JSON.parse(jsonInput);\n      console.log(\"Parsed JSON:\", parsedJson); // Debugging statement\n\n      // Send POST request to the backend\n      const res = await fetch(\"http://localhost:3001/bfhl\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(parsedJson)\n      });\n\n      // Check if the response is okay\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      // Parse and set the response data\n      const data = await res.json();\n      console.log(\"Response data:\", data); // Debugging statement\n      setResponse(data);\n      setShowPreferences(true); // Show the dropdown after submitting\n    } catch (error) {\n      console.error(\"Error:\", error); // Debugging statement\n      alert(\"Invalid JSON input or network error\");\n    }\n  };\n  const handleDropdownChange = e => {\n    const {\n      options\n    } = e.target;\n    const selected = Array.from(options).filter(option => option.selected).map(option => option.value);\n    setSelectedOptions(selected);\n  };\n  const renderResponse = () => {\n    if (!response || selectedOptions.length === 0) return null;\n    const {\n      numbers,\n      alphabets,\n      highest_alphabet\n    } = response;\n    const showNumbers = selectedOptions.includes(\"Numbers\");\n    const showAlphabets = selectedOptions.includes(\"Alphabets\");\n    const showHighestAlphabet = selectedOptions.includes(\"Highest Alphabet\");\n    return /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"mt-3\",\n      children: [showNumbers && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [\"Numbers: \", JSON.stringify(numbers)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), showAlphabets && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [\"Alphabets: \", JSON.stringify(alphabets)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), showHighestAlphabet && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [\"Highest Alphabet: \", JSON.stringify(highest_alphabet)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"YourRollNumber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"jsonInput\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: jsonInput,\n              onChange: e => setJsonInput(e.target.value),\n              placeholder: \"Enter JSON\",\n              rows: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), showPreferences && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"responseOptions\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            multiple: true,\n            onChange: handleDropdownChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Numbers\",\n              children: \"Numbers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Alphabets\",\n              children: \"Alphabets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Highest Alphabet\",\n              children: \"Highest Alphabet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), renderResponse()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectDropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iHbH2gy+6eGiHCpp8m0S7J5kDFU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Form","Container","Row","Col","ListGroup","MultiSelectDropdown","jsxDEV","_jsxDEV","App","_s","jsonInput","setJsonInput","response","setResponse","selectedOptions","setSelectedOptions","showPreferences","setShowPreferences","handleSubmit","parsedJson","JSON","parse","console","log","res","fetch","method","headers","body","stringify","ok","Error","data","json","error","alert","handleDropdownChange","e","options","target","selected","Array","from","filter","option","map","value","renderResponse","length","numbers","alphabets","highest_alphabet","showNumbers","includes","showAlphabets","showHighestAlphabet","className","children","Item","fileName","_jsxFileName","lineNumber","columnNumber","md","Group","controlId","Control","as","onChange","placeholder","rows","variant","onClick","Label","multiple","_c","$RefreshReg$"],"sources":["C:/Sumresh N/Bajaj/bajaj/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Container, Row, Col, ListGroup } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MultiSelectDropdown from \"./MultiSelectDropdown\";\n\nfunction App() {\n  const [jsonInput, setJsonInput] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [showPreferences, setShowPreferences] = useState(false);\n\n  const handleSubmit = async () => {\n    try {\n      // Parse the JSON input\n      const parsedJson = JSON.parse(jsonInput);\n      console.log(\"Parsed JSON:\", parsedJson); // Debugging statement\n\n      // Send POST request to the backend\n      const res = await fetch(\"http://localhost:3001/bfhl\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(parsedJson),\n      });\n\n      // Check if the response is okay\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      // Parse and set the response data\n      const data = await res.json();\n      console.log(\"Response data:\", data); // Debugging statement\n      setResponse(data);\n      setShowPreferences(true); // Show the dropdown after submitting\n    } catch (error) {\n      console.error(\"Error:\", error); // Debugging statement\n      alert(\"Invalid JSON input or network error\");\n    }\n  };\n\n  const handleDropdownChange = (e) => {\n    const { options } = e.target;\n    const selected = Array.from(options)\n      .filter((option) => option.selected)\n      .map((option) => option.value);\n    setSelectedOptions(selected);\n  };\n\n  const renderResponse = () => {\n    if (!response || selectedOptions.length === 0) return null;\n\n    const { numbers, alphabets, highest_alphabet } = response;\n    const showNumbers = selectedOptions.includes(\"Numbers\");\n    const showAlphabets = selectedOptions.includes(\"Alphabets\");\n    const showHighestAlphabet = selectedOptions.includes(\"Highest Alphabet\");\n\n    return (\n      <ListGroup className=\"mt-3\">\n        {showNumbers && (\n          <ListGroup.Item>Numbers: {JSON.stringify(numbers)}</ListGroup.Item>\n        )}\n        {showAlphabets && (\n          <ListGroup.Item>\n            Alphabets: {JSON.stringify(alphabets)}\n          </ListGroup.Item>\n        )}\n        {showHighestAlphabet && (\n          <ListGroup.Item>\n            Highest Alphabet: {JSON.stringify(highest_alphabet)}\n          </ListGroup.Item>\n        )}\n      </ListGroup>\n    );\n  };\n\n  return (\n    <Container className=\"App\">\n      <Row className=\"justify-content-center mt-5\">\n        <Col md={6}>\n          <h1>YourRollNumber</h1>\n          <Form>\n            <Form.Group controlId=\"jsonInput\">\n              <Form.Control\n                as=\"textarea\"\n                value={jsonInput}\n                onChange={(e) => setJsonInput(e.target.value)}\n                placeholder=\"Enter JSON\"\n                rows=\"5\"\n              />\n            </Form.Group>\n            <Button variant=\"primary\" onClick={handleSubmit}>\n              Submit\n            </Button>\n          </Form>\n          {showPreferences && (\n            <Form.Group controlId=\"responseOptions\" className=\"mt-3\">\n              <Form.Label>Select Preferences</Form.Label>\n              <Form.Control\n                as=\"select\"\n                multiple\n                onChange={handleDropdownChange}\n              >\n                <option value=\"Numbers\">Numbers</option>\n                <option value=\"Alphabets\">Alphabets</option>\n                <option value=\"Highest Alphabet\">Highest Alphabet</option>\n              </Form.Control>\n            </Form.Group>\n          )}\n          {renderResponse()}\n        </Col>\n      </Row>\n      <MultiSelectDropdown />\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}